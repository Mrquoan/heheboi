bc = gg
bc.gTI = gg.getTargetInfo
bc.gTP = gg.getTargetPackage
bc.R_C_AP = 16384
bc.R_C_H = 1
bc.C_D = gg.CACHE_DIR
bc.E_C_D = gg.EXT_CACHE_DIR
bc.E_F_D = gg.EXT_FILES_DIR
bc.E_S = gg.EXT_STORAGE
bc.F_D = gg.FILES_DIR
bc.A_7 = 4
bc.A_8 = 6
bc.arch = bc.gTI()
if bc.arch.x64 then
    bc.armType = bc.A_8
    bc.file_ext = "ARM8"
    bc.file_ext_other = "ARM7"
    bc.arm_edit_pre = "~A8 "
    bc.arm_end_func = "~A8 RET"
else
    bc.armType = bc.A_7
    bc.file_ext = "ARM7"
    bc.file_ext_other = "ARM8"
    bc.arm_edit_pre = "~A "
    bc.arm_end_func = "~A BX LR"
end
function h2(hexData)
    local hexChars = "0123456789ABCDEF"
    local bin = ""
    for i = 1, #hexData, 2 do
        local highNibble = hexData:sub(i, i)
        local lowNibble = hexData:sub(i + 1, i + 1)
        local byte = hexChars:find(highNibble) - 1
        byte = byte * 16 + hexChars:find(lowNibble) - 1
        bin = bin .. string.char(byte)
    end
    return bin
end

ARM = {
arm7Negative = function(target)
        bc.arm7NegativeTarget = "X"..tostring(target).."X"
        arm7NegativeFunc
		load(h2(arm7NegativeFunc))()
        return bc.arm7NegativeTarget
    end,
    Int = function(target,R)
        bc.complexIntegerTarget = target
		complexIntegerFunc
		load(h2(complexIntegerFunc))()
		
    if R ~= nil then
          Arm = bc.integerEdits
          for i, v in ipairs(Arm) do             
             Arm[i] = v:gsub('R1','R'..R+1):gsub('R0','R'..R):gsub('S1','S'..R+1):gsub('S0','S'..R):gsub('D1','D'..R+1):gsub('D0','D'..R):gsub('W1','W'..R+1):gsub('W0','W'..R)
          end
          return Arm
       end
        return bc.integerEdits
    end,
	
    Float = function(target,R)
        bc.complexFloatTarget = target
        complexFloatFunc
		load(h2(complexFloatFunc))()
		
    if R ~= nil then
          Arm = bc.floatEdits
          for i, v in ipairs(Arm) do             
             Arm[i] = v:gsub('R1','R'..R+1):gsub('R0','R'..R):gsub('S1','S'..R+1):gsub('S0','S'..R):gsub('D1','D'..R+1):gsub('D0','D'..R):gsub('W1','W'..R+1):gsub('W0','W'..R)
          end
          return Arm
       end
        return bc.floatEdits
    end,
	
    Double = function(target,R)
        bc.complexDoubleTarget = target
		complexDoubleFunc
		load(h2(complexDoubleFunc))()
		
    if R ~= nil then
          Arm = bc.doubleEdits
          for i, v in ipairs(Arm) do             
             Arm[i] = v:gsub('R1','R'..R+1):gsub('R0','R'..R):gsub('S1','S'..R+1):gsub('S0','S'..R):gsub('D1','D'..R+1):gsub('D0','D'..R):gsub('W1','W'..R+1):gsub('W0','W'..R)
          end
          return Arm
       end
        return bc.doubleEdits
    end
}


get_value = {}
float = 16
int = 4
double = 64
arch = gg.getTargetInfo()


if arch.x64 then
    flag_type = 32
else
    flag_type = 4
end
function toHex(val)
    if info.x64==false then val=val&0xffffffff end
    return string.format('%X', val)
end
function getlib_1()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("libil2cpp.so")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("libil2cpp.so")[lib_index].start
end

function getlib_2()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("split_config.armeabi_v7a.apk")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("split_config.armeabi_v7a.apk")[lib_index].start
end

function getlib_3()
	lib_size = 0
	lib_index = ""

	for i,v in pairs(gg.getRangesList("split_config.arm64_v8a.apk")) do
		if v["end"] - v["start"] > lib_size and v["state"] == "Xa" then
			lib_size = v["end"] - v["start"]
			lib_index = i
		end
	end

	BASEADDR = gg.getRangesList("split_config.arm64_v8a.apk")[lib_index].start
end

if pcall(getlib_1) == false then
	if pcall(getlib_2) == false then
		getlib_3()
	end
end
libstar = BASEADDR
lib = BASEADDR



function gg.checkResults(Error)
if gg.getResultsCount() == 0 then 
gg.alert(Error) 
os.exit() 
return end
end


function gg.editOffset(s,t,o)
gg.getResults(gg.getResultsCount())
         local results = gg.getResults(gg.getResultsCount())     
         local a = {}
    for i, p in ipairs(results) do
      a[i] = {address = results[i].address + o, 
      flags = t,
      value = s,
      freeze = true
}
    end  
    gg.addListItems(a)
    gg.loadResults(a)
end 

function gg.checkAddress(Address, ggtype) 
  v = {}
	res = gg.getValues({{address = Address, flags = ggtype}})
	if type(res) ~= "string" then
		if ggtype == gg.TYPE_BYTE then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFF}
		elseif ggtype == gg.TYPE_WORD then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFF}
		elseif ggtype == gg.TYPE_DWORD then
	    v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFF}
		elseif ggtype == gg.TYPE_QWORD then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFFFFFFFFFF}
		elseif ggtype == gg.TYPE_XOR then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFF}
		else
		 v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value}
		end
		return v
	else
		return false
	end
end

function gg.getTextToDword(text)
local text = text
local junk = {[1]=''}
local stln = #text
if stln%2 ~= 0 then stln = stln+1 end
for i = 1,stln/2 do  local  v1 = (string.byte(text,i%stln*2-1)) 
local v2 = (string.byte(text,i%stln*2))  if v2 == nil then v2 = 0 end    
local   v3 = 65536*v2+v1  if #text > 2 then table.insert(junk,1,junk[1]..''..v3)                
elseif #text <= 2 then table.insert(junk,1,v3) end end
ord = '' if order == true and stln > 2 then  ord = ('::'..repeats(tostring(junk[1]:sub(2)),';') * 4 + 1)  end   
if #text > 2 then return junk[1]:sub(2)..ord else return junk[1]..ord end end 
  

function gg.loadAddress(Name) 
v = {}
Name = gg.getTextToDword(Name)
loadValue = {} gg.sleep(50)
Value = get_value[Name]
loadValue[#loadValue + 1] = Value
v = Value
return loadValue 
end

function gg.getAddress(Name,ar,flag) 
Name = gg.getTextToDword(Name)
getAddress = {} 
get_value[Name] = gg.checkAddress(ar,flag)
local Value = get_value[Name]
getAddress[#getAddress + 1] = Value
return getAddress  
end

function gg.revertAddress(Name) 
v = {}
Name = gg.getTextToDword(Name)
v = get_value[Name]
v[1] = {address=(v[1].address), flags=v[1].flags, value = v[1].value, freeze = true}
gg.addListItems(v) gg.clearList() 
return v 
end

function gg.getResultsHook(Name) 
Name = gg.getTextToDword(Name)
local getResultsHook = {}
get_value[Name] = gg.getResults(gg.getResultsCount())
local ResultsHook = get_value[Name]
v = get_value[Name]
getResultsHook[#getResultsHook + 1] = ResultsHook
return getResultsHook
end

function gg.loadResultsHook(Name) 
Name = gg.getTextToDword(Name)
local loadResultsHook = {}
gg.loadResults(get_value[Name]) 
loadResultsHook[#loadResultsHook + 1] = get_value[Name]
v = get_value[Name]
return loadResultsHook
end

function gg.revertResultsHook(Name) 
v = {}
Name = gg.getTextToDword(Name)
v = get_value[Name]
local a = {}
for i, p in ipairs(v) do
      a[i] = {address = v[i].address, 
      flags = v[i].flags,
      value = v[i].value,
      freeze = true
}
    end  
    gg.addListItems(a)
    gg.clearList()
return v 
end

function gg.clearFull() 
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.getListItems()
gg.clearList()
end  

gg.setAddress = function(ar,flag,sz)
if flag == 1 then Offset = 0x1 end
if flag == 2 then Offset = 0x2 end
if flag == 4 then Offset = 0x4 end
if flag == 16 then Offset = 0x4 end
if flag == 32 then Offset = 0x8 end
if flag == 64 then Offset = 0x4 end

local setResult = {}
setResult[#setResult+1] = {address = ar, flags = flag}
for ii = 1,sz -1 do
Address = setResult[#setResult].address
setResult[#setResult+1] = {address = Address + Offset, flags = flag}
end
return gg.getValues(setResult)
end



function isProcess64Bit()
	local regions = gg.getRangesList()
	local lastAddress = regions[#regions]["end"]
	return (lastAddress >> 32) ~= 0
end
local ISA = isProcess64Bit()
function ISAOffsets()
	if (ISA == false) then
	
function gg.memoryPatch(Name,Offset,Value,Flags) 
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value
gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value
gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value
gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value
gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value
get_value[Name..'loz'] = {
   VL1,
   VL2,
   VL3,
   VL4,
   VL5
}
gg.clearFull()

gg.loadAddress(Name)
local update = v[1].address
Value = tonumber(Value)

-- double
if (tonumber(Flags) == 64) then
Value = ARM.Double(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end


if (tonumber(Flags) == 16) then  -- float
Value = ARM.Float(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end

if (tonumber(Flags) == 4) then  -- int
Value = ARM.Int(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end
end

function gg.revertMemoryPatch(Name)
gg.setVisible(false) gg.clearFull()

local Value = get_value[Name..'loz'][1]
local Value1 = get_value[Name..'loz'][2]
local Value2 = get_value[Name..'loz'][3]
local Value3 = get_value[Name..'loz'][4]
local Value4 = get_value[Name..'loz'][5]


gg.loadAddress(Name)
newLocation = v[1].address
local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = Value, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = Value1, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = Value2, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = Value3, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = Value4, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
end    

gg.editParameter = function(Name, Offset, Value)
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

			Hexpath = {}
			Hexpath[1] = {address=(lib + Offset),flags=4,value=(Value),freeze=true};
			gg.addListItems(Hexpath);
			gg.clearFull();
			return Hexpath;
		end
  
	elseif (ISA == true) then 
	

function gg.memoryPatch(Name,Offset,Value,Flags) 
gg.setVisible(false) gg.clearFull()

gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

get_value[Name..'loz'] = {
   VL1,
   VL2,
   VL3,
   VL4,
   VL5
}
gg.clearFull()

gg.loadAddress(Name)
local update = v[1].address

-- float
if (tonumber(Flags) == 16) then
Value = ARM.Float(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end

-- double
if (tonumber(Flags) == 64) then
Value = ARM.Double(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end

-- int
if (tonumber(Flags) == 4) then
Value = ARM.Int(Value)
local m = {}
for i, v in ipairs(Value) do
if i == 1 then
m[i] = {address = update, flags = 4, value = v, freeze = true}
else
address = update + 0x4
m[i] = {address = address, flags = 4, value = v, freeze = true}
update = address
end
end
gg.addListItems(m) gg.clearFull()
return 
end
end

function gg.revertMemoryPatch(Name)
gg.setVisible(false) gg.clearFull()
local Value = get_value[Name..'loz'][1]
local Value1 = get_value[Name..'loz'][2]
local Value2 = get_value[Name..'loz'][3]
local Value3 = get_value[Name..'loz'][4]
local Value4 = get_value[Name..'loz'][5]


gg.loadAddress(Name)
newLocation = v[1].address
local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = Value, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = Value1, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = Value2, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = Value3, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = Value4, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
      end   
gg.editParameter = function(Name, Offset, Value)
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

			Hexpath = {}
			Hexpath[1] = {address=(lib + Offset),flags=4,value=(Value),freeze=true};
			gg.addListItems(Hexpath);
			gg.clearFull();
			return Hexpath;
		end;           
end
end
ISAOffsets()


  
